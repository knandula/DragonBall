//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zza.ExecutionEngine.ZzaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutputLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int taskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Command {
            get {
                return this.CommandField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandField, value) != true)) {
                    this.CommandField = value;
                    this.RaisePropertyChanged("Command");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputLog {
            get {
                return this.OutputLogField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputLogField, value) != true)) {
                    this.OutputLogField = value;
                    this.RaisePropertyChanged("OutputLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskType {
            get {
                return this.TaskTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskTypeField, value) != true)) {
                    this.TaskTypeField = value;
                    this.RaisePropertyChanged("TaskType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int taskID {
            get {
                return this.taskIDField;
            }
            set {
                if ((this.taskIDField.Equals(value) != true)) {
                    this.taskIDField = value;
                    this.RaisePropertyChanged("taskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> endAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int intHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int intMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int intSecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int repeatforeverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> startAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int taskIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> endAt {
            get {
                return this.endAtField;
            }
            set {
                if ((this.endAtField.Equals(value) != true)) {
                    this.endAtField = value;
                    this.RaisePropertyChanged("endAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int intHours {
            get {
                return this.intHoursField;
            }
            set {
                if ((this.intHoursField.Equals(value) != true)) {
                    this.intHoursField = value;
                    this.RaisePropertyChanged("intHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int intMin {
            get {
                return this.intMinField;
            }
            set {
                if ((this.intMinField.Equals(value) != true)) {
                    this.intMinField = value;
                    this.RaisePropertyChanged("intMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int intSec {
            get {
                return this.intSecField;
            }
            set {
                if ((this.intSecField.Equals(value) != true)) {
                    this.intSecField = value;
                    this.RaisePropertyChanged("intSec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int repeatforever {
            get {
                return this.repeatforeverField;
            }
            set {
                if ((this.repeatforeverField.Equals(value) != true)) {
                    this.repeatforeverField = value;
                    this.RaisePropertyChanged("repeatforever");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sID {
            get {
                return this.sIDField;
            }
            set {
                if ((this.sIDField.Equals(value) != true)) {
                    this.sIDField = value;
                    this.RaisePropertyChanged("sID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> startAt {
            get {
                return this.startAtField;
            }
            set {
                if ((this.startAtField.Equals(value) != true)) {
                    this.startAtField = value;
                    this.RaisePropertyChanged("startAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int taskID {
            get {
                return this.taskIDField;
            }
            set {
                if ((this.taskIDField.Equals(value) != true)) {
                    this.taskIDField = value;
                    this.RaisePropertyChanged("taskID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ZzaService.IZzaService")]
    public interface IZzaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetMachineInfo", ReplyAction="http://tempuri.org/IZzaService/GetMachineInfoResponse")]
        Zza.ExecutionEngine.ZzaService.Client[] GetMachineInfo(string hostname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetMachineInfo", ReplyAction="http://tempuri.org/IZzaService/GetMachineInfoResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Client[]> GetMachineInfoAsync(string hostname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetTaskInfo", ReplyAction="http://tempuri.org/IZzaService/GetTaskInfoResponse")]
        Zza.ExecutionEngine.ZzaService.Task[] GetTaskInfo(string task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetTaskInfo", ReplyAction="http://tempuri.org/IZzaService/GetTaskInfoResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task[]> GetTaskInfoAsync(string task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetMachineInfoById", ReplyAction="http://tempuri.org/IZzaService/GetMachineInfoByIdResponse")]
        Zza.ExecutionEngine.ZzaService.Client GetMachineInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetMachineInfoById", ReplyAction="http://tempuri.org/IZzaService/GetMachineInfoByIdResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Client> GetMachineInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetTaskInfoById", ReplyAction="http://tempuri.org/IZzaService/GetTaskInfoByIdResponse")]
        Zza.ExecutionEngine.ZzaService.Task GetTaskInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetTaskInfoById", ReplyAction="http://tempuri.org/IZzaService/GetTaskInfoByIdResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task> GetTaskInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateClientInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateClientInformationResponse")]
        bool UpdateClientInformation(Zza.ExecutionEngine.ZzaService.Client obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateClientInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateClientInformationResponse")]
        System.Threading.Tasks.Task<bool> UpdateClientInformationAsync(Zza.ExecutionEngine.ZzaService.Client obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateClient", ReplyAction="http://tempuri.org/IZzaService/CreateClientResponse")]
        bool CreateClient(Zza.ExecutionEngine.ZzaService.Client obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateClient", ReplyAction="http://tempuri.org/IZzaService/CreateClientResponse")]
        System.Threading.Tasks.Task<bool> CreateClientAsync(Zza.ExecutionEngine.ZzaService.Client obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/TaskDone", ReplyAction="http://tempuri.org/IZzaService/TaskDoneResponse")]
        void TaskDone(int taskid, string output);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/TaskDone", ReplyAction="http://tempuri.org/IZzaService/TaskDoneResponse")]
        System.Threading.Tasks.Task TaskDoneAsync(int taskid, string output);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteClient", ReplyAction="http://tempuri.org/IZzaService/DeleteClientResponse")]
        bool DeleteClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteClient", ReplyAction="http://tempuri.org/IZzaService/DeleteClientResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetDetailsView", ReplyAction="http://tempuri.org/IZzaService/GetDetailsViewResponse")]
        Zza.ExecutionEngine.ZzaService.Task[] GetDetailsView(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetDetailsView", ReplyAction="http://tempuri.org/IZzaService/GetDetailsViewResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task[]> GetDetailsViewAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetScheduleByTaskId", ReplyAction="http://tempuri.org/IZzaService/GetScheduleByTaskIdResponse")]
        Zza.ExecutionEngine.ZzaService.Schedule[] GetScheduleByTaskId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetScheduleByTaskId", ReplyAction="http://tempuri.org/IZzaService/GetScheduleByTaskIdResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule[]> GetScheduleByTaskIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateTaskInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateTaskInformationResponse")]
        bool UpdateTaskInformation(Zza.ExecutionEngine.ZzaService.Task obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateTaskInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateTaskInformationResponse")]
        System.Threading.Tasks.Task<bool> UpdateTaskInformationAsync(Zza.ExecutionEngine.ZzaService.Task obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateTask", ReplyAction="http://tempuri.org/IZzaService/CreateTaskResponse")]
        bool CreateTask(Zza.ExecutionEngine.ZzaService.Task obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateTask", ReplyAction="http://tempuri.org/IZzaService/CreateTaskResponse")]
        System.Threading.Tasks.Task<bool> CreateTaskAsync(Zza.ExecutionEngine.ZzaService.Task obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteTask", ReplyAction="http://tempuri.org/IZzaService/DeleteTaskResponse")]
        bool DeleteTask(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteTask", ReplyAction="http://tempuri.org/IZzaService/DeleteTaskResponse")]
        System.Threading.Tasks.Task<bool> DeleteTaskAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetSchedules", ReplyAction="http://tempuri.org/IZzaService/GetSchedulesResponse")]
        Zza.ExecutionEngine.ZzaService.Schedule[] GetSchedules(string sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetSchedules", ReplyAction="http://tempuri.org/IZzaService/GetSchedulesResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule[]> GetSchedulesAsync(string sch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/HelloWorld", ReplyAction="http://tempuri.org/IZzaService/HelloWorldResponse")]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/HelloWorld", ReplyAction="http://tempuri.org/IZzaService/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateSchedule", ReplyAction="http://tempuri.org/IZzaService/CreateScheduleResponse")]
        bool CreateSchedule(Zza.ExecutionEngine.ZzaService.Schedule obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/CreateSchedule", ReplyAction="http://tempuri.org/IZzaService/CreateScheduleResponse")]
        System.Threading.Tasks.Task<bool> CreateScheduleAsync(Zza.ExecutionEngine.ZzaService.Schedule obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteSchedule", ReplyAction="http://tempuri.org/IZzaService/DeleteScheduleResponse")]
        bool DeleteSchedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/DeleteSchedule", ReplyAction="http://tempuri.org/IZzaService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task<bool> DeleteScheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetScheduleInfoById", ReplyAction="http://tempuri.org/IZzaService/GetScheduleInfoByIdResponse")]
        Zza.ExecutionEngine.ZzaService.Schedule GetScheduleInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/GetScheduleInfoById", ReplyAction="http://tempuri.org/IZzaService/GetScheduleInfoByIdResponse")]
        System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule> GetScheduleInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateScheduleInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateScheduleInformationResponse")]
        bool UpdateScheduleInformation(Zza.ExecutionEngine.ZzaService.Schedule obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IZzaService/UpdateScheduleInformation", ReplyAction="http://tempuri.org/IZzaService/UpdateScheduleInformationResponse")]
        System.Threading.Tasks.Task<bool> UpdateScheduleInformationAsync(Zza.ExecutionEngine.ZzaService.Schedule obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZzaServiceChannel : Zza.ExecutionEngine.ZzaService.IZzaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZzaServiceClient : System.ServiceModel.ClientBase<Zza.ExecutionEngine.ZzaService.IZzaService>, Zza.ExecutionEngine.ZzaService.IZzaService {
        
        public ZzaServiceClient() {
        }
        
        public ZzaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZzaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZzaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZzaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Zza.ExecutionEngine.ZzaService.Client[] GetMachineInfo(string hostname) {
            return base.Channel.GetMachineInfo(hostname);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Client[]> GetMachineInfoAsync(string hostname) {
            return base.Channel.GetMachineInfoAsync(hostname);
        }
        
        public Zza.ExecutionEngine.ZzaService.Task[] GetTaskInfo(string task) {
            return base.Channel.GetTaskInfo(task);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task[]> GetTaskInfoAsync(string task) {
            return base.Channel.GetTaskInfoAsync(task);
        }
        
        public Zza.ExecutionEngine.ZzaService.Client GetMachineInfoById(int id) {
            return base.Channel.GetMachineInfoById(id);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Client> GetMachineInfoByIdAsync(int id) {
            return base.Channel.GetMachineInfoByIdAsync(id);
        }
        
        public Zza.ExecutionEngine.ZzaService.Task GetTaskInfoById(int id) {
            return base.Channel.GetTaskInfoById(id);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task> GetTaskInfoByIdAsync(int id) {
            return base.Channel.GetTaskInfoByIdAsync(id);
        }
        
        public bool UpdateClientInformation(Zza.ExecutionEngine.ZzaService.Client obj) {
            return base.Channel.UpdateClientInformation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateClientInformationAsync(Zza.ExecutionEngine.ZzaService.Client obj) {
            return base.Channel.UpdateClientInformationAsync(obj);
        }
        
        public bool CreateClient(Zza.ExecutionEngine.ZzaService.Client obj) {
            return base.Channel.CreateClient(obj);
        }
        
        public System.Threading.Tasks.Task<bool> CreateClientAsync(Zza.ExecutionEngine.ZzaService.Client obj) {
            return base.Channel.CreateClientAsync(obj);
        }
        
        public void TaskDone(int taskid, string output) {
            base.Channel.TaskDone(taskid, output);
        }
        
        public System.Threading.Tasks.Task TaskDoneAsync(int taskid, string output) {
            return base.Channel.TaskDoneAsync(taskid, output);
        }
        
        public bool DeleteClient(int id) {
            return base.Channel.DeleteClient(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientAsync(int id) {
            return base.Channel.DeleteClientAsync(id);
        }
        
        public Zza.ExecutionEngine.ZzaService.Task[] GetDetailsView(int id) {
            return base.Channel.GetDetailsView(id);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Task[]> GetDetailsViewAsync(int id) {
            return base.Channel.GetDetailsViewAsync(id);
        }
        
        public Zza.ExecutionEngine.ZzaService.Schedule[] GetScheduleByTaskId(int id) {
            return base.Channel.GetScheduleByTaskId(id);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule[]> GetScheduleByTaskIdAsync(int id) {
            return base.Channel.GetScheduleByTaskIdAsync(id);
        }
        
        public bool UpdateTaskInformation(Zza.ExecutionEngine.ZzaService.Task obj) {
            return base.Channel.UpdateTaskInformation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateTaskInformationAsync(Zza.ExecutionEngine.ZzaService.Task obj) {
            return base.Channel.UpdateTaskInformationAsync(obj);
        }
        
        public bool CreateTask(Zza.ExecutionEngine.ZzaService.Task obj) {
            return base.Channel.CreateTask(obj);
        }
        
        public System.Threading.Tasks.Task<bool> CreateTaskAsync(Zza.ExecutionEngine.ZzaService.Task obj) {
            return base.Channel.CreateTaskAsync(obj);
        }
        
        public bool DeleteTask(int id) {
            return base.Channel.DeleteTask(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTaskAsync(int id) {
            return base.Channel.DeleteTaskAsync(id);
        }
        
        public Zza.ExecutionEngine.ZzaService.Schedule[] GetSchedules(string sch) {
            return base.Channel.GetSchedules(sch);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule[]> GetSchedulesAsync(string sch) {
            return base.Channel.GetSchedulesAsync(sch);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public bool CreateSchedule(Zza.ExecutionEngine.ZzaService.Schedule obj) {
            return base.Channel.CreateSchedule(obj);
        }
        
        public System.Threading.Tasks.Task<bool> CreateScheduleAsync(Zza.ExecutionEngine.ZzaService.Schedule obj) {
            return base.Channel.CreateScheduleAsync(obj);
        }
        
        public bool DeleteSchedule(int id) {
            return base.Channel.DeleteSchedule(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteScheduleAsync(int id) {
            return base.Channel.DeleteScheduleAsync(id);
        }
        
        public Zza.ExecutionEngine.ZzaService.Schedule GetScheduleInfoById(int id) {
            return base.Channel.GetScheduleInfoById(id);
        }
        
        public System.Threading.Tasks.Task<Zza.ExecutionEngine.ZzaService.Schedule> GetScheduleInfoByIdAsync(int id) {
            return base.Channel.GetScheduleInfoByIdAsync(id);
        }
        
        public bool UpdateScheduleInformation(Zza.ExecutionEngine.ZzaService.Schedule obj) {
            return base.Channel.UpdateScheduleInformation(obj);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateScheduleInformationAsync(Zza.ExecutionEngine.ZzaService.Schedule obj) {
            return base.Channel.UpdateScheduleInformationAsync(obj);
        }
    }
}
