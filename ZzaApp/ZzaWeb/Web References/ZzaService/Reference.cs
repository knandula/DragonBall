//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace ZzaWeb.ZzaService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IZzaService", Namespace="http://tempuri.org/")]
    public partial class ZzaService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMachineInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback TaskDoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailsViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleByTaskIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaskInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchedulesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleInfoByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateScheduleInformationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ZzaService() {
            this.Url = global::ZzaWeb.Properties.Settings.Default.ZzaWeb_ZzaService_ZzaService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMachineInfoCompletedEventHandler GetMachineInfoCompleted;
        
        /// <remarks/>
        public event GetTaskInfoCompletedEventHandler GetTaskInfoCompleted;
        
        /// <remarks/>
        public event GetMachineInfoByIdCompletedEventHandler GetMachineInfoByIdCompleted;
        
        /// <remarks/>
        public event GetTaskInfoByIdCompletedEventHandler GetTaskInfoByIdCompleted;
        
        /// <remarks/>
        public event UpdateClientInformationCompletedEventHandler UpdateClientInformationCompleted;
        
        /// <remarks/>
        public event CreateClientCompletedEventHandler CreateClientCompleted;
        
        /// <remarks/>
        public event TaskDoneCompletedEventHandler TaskDoneCompleted;
        
        /// <remarks/>
        public event DeleteClientCompletedEventHandler DeleteClientCompleted;
        
        /// <remarks/>
        public event GetDetailsViewCompletedEventHandler GetDetailsViewCompleted;
        
        /// <remarks/>
        public event GetScheduleByTaskIdCompletedEventHandler GetScheduleByTaskIdCompleted;
        
        /// <remarks/>
        public event UpdateTaskInformationCompletedEventHandler UpdateTaskInformationCompleted;
        
        /// <remarks/>
        public event CreateTaskCompletedEventHandler CreateTaskCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event GetSchedulesCompletedEventHandler GetSchedulesCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CreateScheduleCompletedEventHandler CreateScheduleCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event GetScheduleInfoByIdCompletedEventHandler GetScheduleInfoByIdCompleted;
        
        /// <remarks/>
        public event UpdateScheduleInformationCompletedEventHandler UpdateScheduleInformationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetMachineInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
        public Client[] GetMachineInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hostname) {
            object[] results = this.Invoke("GetMachineInfo", new object[] {
                        hostname});
            return ((Client[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineInfoAsync(string hostname) {
            this.GetMachineInfoAsync(hostname, null);
        }
        
        /// <remarks/>
        public void GetMachineInfoAsync(string hostname, object userState) {
            if ((this.GetMachineInfoOperationCompleted == null)) {
                this.GetMachineInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineInfoOperationCompleted);
            }
            this.InvokeAsync("GetMachineInfo", new object[] {
                        hostname}, this.GetMachineInfoOperationCompleted, userState);
        }
        
        private void OnGetMachineInfoOperationCompleted(object arg) {
            if ((this.GetMachineInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineInfoCompleted(this, new GetMachineInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetTaskInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
        public Task[] GetTaskInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string task) {
            object[] results = this.Invoke("GetTaskInfo", new object[] {
                        task});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(string task) {
            this.GetTaskInfoAsync(task, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoAsync(string task, object userState) {
            if ((this.GetTaskInfoOperationCompleted == null)) {
                this.GetTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfo", new object[] {
                        task}, this.GetTaskInfoOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoOperationCompleted(object arg) {
            if ((this.GetTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoCompleted(this, new GetTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetMachineInfoById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Client GetMachineInfoById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetMachineInfoById", new object[] {
                        id,
                        idSpecified});
            return ((Client)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineInfoByIdAsync(int id, bool idSpecified) {
            this.GetMachineInfoByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetMachineInfoByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetMachineInfoByIdOperationCompleted == null)) {
                this.GetMachineInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineInfoByIdOperationCompleted);
            }
            this.InvokeAsync("GetMachineInfoById", new object[] {
                        id,
                        idSpecified}, this.GetMachineInfoByIdOperationCompleted, userState);
        }
        
        private void OnGetMachineInfoByIdOperationCompleted(object arg) {
            if ((this.GetMachineInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineInfoByIdCompleted(this, new GetMachineInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetTaskInfoById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Task GetTaskInfoById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetTaskInfoById", new object[] {
                        id,
                        idSpecified});
            return ((Task)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskInfoByIdAsync(int id, bool idSpecified) {
            this.GetTaskInfoByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetTaskInfoByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetTaskInfoByIdOperationCompleted == null)) {
                this.GetTaskInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskInfoByIdOperationCompleted);
            }
            this.InvokeAsync("GetTaskInfoById", new object[] {
                        id,
                        idSpecified}, this.GetTaskInfoByIdOperationCompleted, userState);
        }
        
        private void OnGetTaskInfoByIdOperationCompleted(object arg) {
            if ((this.GetTaskInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskInfoByIdCompleted(this, new GetTaskInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/UpdateClientInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateClientInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Client obj, out bool UpdateClientInformationResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateClientInformationResultSpecified) {
            object[] results = this.Invoke("UpdateClientInformation", new object[] {
                        obj});
            UpdateClientInformationResult = ((bool)(results[0]));
            UpdateClientInformationResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateClientInformationAsync(Client obj) {
            this.UpdateClientInformationAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateClientInformationAsync(Client obj, object userState) {
            if ((this.UpdateClientInformationOperationCompleted == null)) {
                this.UpdateClientInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientInformationOperationCompleted);
            }
            this.InvokeAsync("UpdateClientInformation", new object[] {
                        obj}, this.UpdateClientInformationOperationCompleted, userState);
        }
        
        private void OnUpdateClientInformationOperationCompleted(object arg) {
            if ((this.UpdateClientInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientInformationCompleted(this, new UpdateClientInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/CreateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateClient([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Client obj, out bool CreateClientResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateClientResultSpecified) {
            object[] results = this.Invoke("CreateClient", new object[] {
                        obj});
            CreateClientResult = ((bool)(results[0]));
            CreateClientResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CreateClientAsync(Client obj) {
            this.CreateClientAsync(obj, null);
        }
        
        /// <remarks/>
        public void CreateClientAsync(Client obj, object userState) {
            if ((this.CreateClientOperationCompleted == null)) {
                this.CreateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateClientOperationCompleted);
            }
            this.InvokeAsync("CreateClient", new object[] {
                        obj}, this.CreateClientOperationCompleted, userState);
        }
        
        private void OnCreateClientOperationCompleted(object arg) {
            if ((this.CreateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateClientCompleted(this, new CreateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/TaskDone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TaskDone(int taskid, [System.Xml.Serialization.XmlIgnoreAttribute()] bool taskidSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string output) {
            this.Invoke("TaskDone", new object[] {
                        taskid,
                        taskidSpecified,
                        output});
        }
        
        /// <remarks/>
        public void TaskDoneAsync(int taskid, bool taskidSpecified, string output) {
            this.TaskDoneAsync(taskid, taskidSpecified, output, null);
        }
        
        /// <remarks/>
        public void TaskDoneAsync(int taskid, bool taskidSpecified, string output, object userState) {
            if ((this.TaskDoneOperationCompleted == null)) {
                this.TaskDoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTaskDoneOperationCompleted);
            }
            this.InvokeAsync("TaskDone", new object[] {
                        taskid,
                        taskidSpecified,
                        output}, this.TaskDoneOperationCompleted, userState);
        }
        
        private void OnTaskDoneOperationCompleted(object arg) {
            if ((this.TaskDoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TaskDoneCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/DeleteClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteClient(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out bool DeleteClientResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteClientResultSpecified) {
            object[] results = this.Invoke("DeleteClient", new object[] {
                        id,
                        idSpecified});
            DeleteClientResult = ((bool)(results[0]));
            DeleteClientResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteClientAsync(int id, bool idSpecified) {
            this.DeleteClientAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteClientAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteClientOperationCompleted == null)) {
                this.DeleteClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteClientOperationCompleted);
            }
            this.InvokeAsync("DeleteClient", new object[] {
                        id,
                        idSpecified}, this.DeleteClientOperationCompleted, userState);
        }
        
        private void OnDeleteClientOperationCompleted(object arg) {
            if ((this.DeleteClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteClientCompleted(this, new DeleteClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetDetailsView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
        public Task[] GetDetailsView(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetDetailsView", new object[] {
                        id,
                        idSpecified});
            return ((Task[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailsViewAsync(int id, bool idSpecified) {
            this.GetDetailsViewAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetDetailsViewAsync(int id, bool idSpecified, object userState) {
            if ((this.GetDetailsViewOperationCompleted == null)) {
                this.GetDetailsViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailsViewOperationCompleted);
            }
            this.InvokeAsync("GetDetailsView", new object[] {
                        id,
                        idSpecified}, this.GetDetailsViewOperationCompleted, userState);
        }
        
        private void OnGetDetailsViewOperationCompleted(object arg) {
            if ((this.GetDetailsViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailsViewCompleted(this, new GetDetailsViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetScheduleByTaskId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
        public Schedule[] GetScheduleByTaskId(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetScheduleByTaskId", new object[] {
                        id,
                        idSpecified});
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleByTaskIdAsync(int id, bool idSpecified) {
            this.GetScheduleByTaskIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetScheduleByTaskIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetScheduleByTaskIdOperationCompleted == null)) {
                this.GetScheduleByTaskIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleByTaskIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleByTaskId", new object[] {
                        id,
                        idSpecified}, this.GetScheduleByTaskIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleByTaskIdOperationCompleted(object arg) {
            if ((this.GetScheduleByTaskIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleByTaskIdCompleted(this, new GetScheduleByTaskIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/UpdateTaskInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTaskInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Task obj, out bool UpdateTaskInformationResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateTaskInformationResultSpecified) {
            object[] results = this.Invoke("UpdateTaskInformation", new object[] {
                        obj});
            UpdateTaskInformationResult = ((bool)(results[0]));
            UpdateTaskInformationResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateTaskInformationAsync(Task obj) {
            this.UpdateTaskInformationAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateTaskInformationAsync(Task obj, object userState) {
            if ((this.UpdateTaskInformationOperationCompleted == null)) {
                this.UpdateTaskInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaskInformationOperationCompleted);
            }
            this.InvokeAsync("UpdateTaskInformation", new object[] {
                        obj}, this.UpdateTaskInformationOperationCompleted, userState);
        }
        
        private void OnUpdateTaskInformationOperationCompleted(object arg) {
            if ((this.UpdateTaskInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaskInformationCompleted(this, new UpdateTaskInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/CreateTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Task obj, out bool CreateTaskResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateTaskResultSpecified) {
            object[] results = this.Invoke("CreateTask", new object[] {
                        obj});
            CreateTaskResult = ((bool)(results[0]));
            CreateTaskResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CreateTaskAsync(Task obj) {
            this.CreateTaskAsync(obj, null);
        }
        
        /// <remarks/>
        public void CreateTaskAsync(Task obj, object userState) {
            if ((this.CreateTaskOperationCompleted == null)) {
                this.CreateTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTaskOperationCompleted);
            }
            this.InvokeAsync("CreateTask", new object[] {
                        obj}, this.CreateTaskOperationCompleted, userState);
        }
        
        private void OnCreateTaskOperationCompleted(object arg) {
            if ((this.CreateTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTaskCompleted(this, new CreateTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/DeleteTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTask(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out bool DeleteTaskResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteTaskResultSpecified) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        id,
                        idSpecified});
            DeleteTaskResult = ((bool)(results[0]));
            DeleteTaskResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(int id, bool idSpecified) {
            this.DeleteTaskAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        id,
                        idSpecified}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetSchedules", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
        public Schedule[] GetSchedules([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sch) {
            object[] results = this.Invoke("GetSchedules", new object[] {
                        sch});
            return ((Schedule[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string sch) {
            this.GetSchedulesAsync(sch, null);
        }
        
        /// <remarks/>
        public void GetSchedulesAsync(string sch, object userState) {
            if ((this.GetSchedulesOperationCompleted == null)) {
                this.GetSchedulesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchedulesOperationCompleted);
            }
            this.InvokeAsync("GetSchedules", new object[] {
                        sch}, this.GetSchedulesOperationCompleted, userState);
        }
        
        private void OnGetSchedulesOperationCompleted(object arg) {
            if ((this.GetSchedulesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/CreateSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateSchedule([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Schedule obj, out bool CreateScheduleResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CreateScheduleResultSpecified) {
            object[] results = this.Invoke("CreateSchedule", new object[] {
                        obj});
            CreateScheduleResult = ((bool)(results[0]));
            CreateScheduleResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CreateScheduleAsync(Schedule obj) {
            this.CreateScheduleAsync(obj, null);
        }
        
        /// <remarks/>
        public void CreateScheduleAsync(Schedule obj, object userState) {
            if ((this.CreateScheduleOperationCompleted == null)) {
                this.CreateScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateScheduleOperationCompleted);
            }
            this.InvokeAsync("CreateSchedule", new object[] {
                        obj}, this.CreateScheduleOperationCompleted, userState);
        }
        
        private void OnCreateScheduleOperationCompleted(object arg) {
            if ((this.CreateScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateScheduleCompleted(this, new CreateScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/DeleteSchedule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, out bool DeleteScheduleResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool DeleteScheduleResultSpecified) {
            object[] results = this.Invoke("DeleteSchedule", new object[] {
                        id,
                        idSpecified});
            DeleteScheduleResult = ((bool)(results[0]));
            DeleteScheduleResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int id, bool idSpecified) {
            this.DeleteScheduleAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int id, bool idSpecified, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        id,
                        idSpecified}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new DeleteScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/GetScheduleInfoById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Schedule GetScheduleInfoById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified) {
            object[] results = this.Invoke("GetScheduleInfoById", new object[] {
                        id,
                        idSpecified});
            return ((Schedule)(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleInfoByIdAsync(int id, bool idSpecified) {
            this.GetScheduleInfoByIdAsync(id, idSpecified, null);
        }
        
        /// <remarks/>
        public void GetScheduleInfoByIdAsync(int id, bool idSpecified, object userState) {
            if ((this.GetScheduleInfoByIdOperationCompleted == null)) {
                this.GetScheduleInfoByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleInfoByIdOperationCompleted);
            }
            this.InvokeAsync("GetScheduleInfoById", new object[] {
                        id,
                        idSpecified}, this.GetScheduleInfoByIdOperationCompleted, userState);
        }
        
        private void OnGetScheduleInfoByIdOperationCompleted(object arg) {
            if ((this.GetScheduleInfoByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleInfoByIdCompleted(this, new GetScheduleInfoByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IZzaService/UpdateScheduleInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateScheduleInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Schedule obj, out bool UpdateScheduleInformationResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateScheduleInformationResultSpecified) {
            object[] results = this.Invoke("UpdateScheduleInformation", new object[] {
                        obj});
            UpdateScheduleInformationResult = ((bool)(results[0]));
            UpdateScheduleInformationResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UpdateScheduleInformationAsync(Schedule obj) {
            this.UpdateScheduleInformationAsync(obj, null);
        }
        
        /// <remarks/>
        public void UpdateScheduleInformationAsync(Schedule obj, object userState) {
            if ((this.UpdateScheduleInformationOperationCompleted == null)) {
                this.UpdateScheduleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateScheduleInformationOperationCompleted);
            }
            this.InvokeAsync("UpdateScheduleInformation", new object[] {
                        obj}, this.UpdateScheduleInformationOperationCompleted, userState);
        }
        
        private void OnUpdateScheduleInformationOperationCompleted(object arg) {
            if ((this.UpdateScheduleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateScheduleInformationCompleted(this, new UpdateScheduleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    public partial class Client {
        
        private string hostNameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string ipAddressField;
        
        private string passwordField;
        
        private string usernameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    public partial class Schedule {
        
        private System.Nullable<System.DateTime> endAtField;
        
        private bool endAtFieldSpecified;
        
        private int intHoursField;
        
        private bool intHoursFieldSpecified;
        
        private int intMinField;
        
        private bool intMinFieldSpecified;
        
        private int intSecField;
        
        private bool intSecFieldSpecified;
        
        private int repeatforeverField;
        
        private bool repeatforeverFieldSpecified;
        
        private int sIDField;
        
        private bool sIDFieldSpecified;
        
        private System.Nullable<System.DateTime> startAtField;
        
        private bool startAtFieldSpecified;
        
        private int taskIDField;
        
        private bool taskIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> endAt {
            get {
                return this.endAtField;
            }
            set {
                this.endAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool endAtSpecified {
            get {
                return this.endAtFieldSpecified;
            }
            set {
                this.endAtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int intHours {
            get {
                return this.intHoursField;
            }
            set {
                this.intHoursField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intHoursSpecified {
            get {
                return this.intHoursFieldSpecified;
            }
            set {
                this.intHoursFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int intMin {
            get {
                return this.intMinField;
            }
            set {
                this.intMinField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intMinSpecified {
            get {
                return this.intMinFieldSpecified;
            }
            set {
                this.intMinFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int intSec {
            get {
                return this.intSecField;
            }
            set {
                this.intSecField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intSecSpecified {
            get {
                return this.intSecFieldSpecified;
            }
            set {
                this.intSecFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int repeatforever {
            get {
                return this.repeatforeverField;
            }
            set {
                this.repeatforeverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool repeatforeverSpecified {
            get {
                return this.repeatforeverFieldSpecified;
            }
            set {
                this.repeatforeverFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int sID {
            get {
                return this.sIDField;
            }
            set {
                this.sIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sIDSpecified {
            get {
                return this.sIDFieldSpecified;
            }
            set {
                this.sIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> startAt {
            get {
                return this.startAtField;
            }
            set {
                this.startAtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startAtSpecified {
            get {
                return this.startAtFieldSpecified;
            }
            set {
                this.startAtFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int taskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool taskIDSpecified {
            get {
                return this.taskIDFieldSpecified;
            }
            set {
                this.taskIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Zza.Entities")]
    public partial class Task {
        
        private int clientIDField;
        
        private bool clientIDFieldSpecified;
        
        private string commandField;
        
        private string outputLogField;
        
        private string pathField;
        
        private string statusField;
        
        private string taskNameField;
        
        private string taskTypeField;
        
        private int taskIDField;
        
        private bool taskIDFieldSpecified;
        
        /// <remarks/>
        public int ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientIDSpecified {
            get {
                return this.clientIDFieldSpecified;
            }
            set {
                this.clientIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OutputLog {
            get {
                return this.outputLogField;
            }
            set {
                this.outputLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TaskName {
            get {
                return this.taskNameField;
            }
            set {
                this.taskNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
        
        /// <remarks/>
        public int taskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool taskIDSpecified {
            get {
                return this.taskIDFieldSpecified;
            }
            set {
                this.taskIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMachineInfoCompletedEventHandler(object sender, GetMachineInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTaskInfoCompletedEventHandler(object sender, GetTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMachineInfoByIdCompletedEventHandler(object sender, GetMachineInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Client Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Client)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTaskInfoByIdCompletedEventHandler(object sender, GetTaskInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateClientInformationCompletedEventHandler(object sender, UpdateClientInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateClientInformationResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateClientInformationResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateClientCompletedEventHandler(object sender, CreateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool CreateClientResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CreateClientResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void TaskDoneCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteClientCompletedEventHandler(object sender, DeleteClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteClientResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteClientResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDetailsViewCompletedEventHandler(object sender, GetDetailsViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailsViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailsViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Task[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Task[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScheduleByTaskIdCompletedEventHandler(object sender, GetScheduleByTaskIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleByTaskIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleByTaskIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Schedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Schedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateTaskInformationCompletedEventHandler(object sender, UpdateTaskInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTaskInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTaskInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateTaskInformationResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateTaskInformationResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateTaskCompletedEventHandler(object sender, CreateTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool CreateTaskResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CreateTaskResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteTaskCompletedEventHandler(object sender, DeleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteTaskResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteTaskResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSchedulesCompletedEventHandler(object sender, GetSchedulesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Schedule[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Schedule[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CreateScheduleCompletedEventHandler(object sender, CreateScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool CreateScheduleResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool CreateScheduleResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, DeleteScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool DeleteScheduleResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool DeleteScheduleResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetScheduleInfoByIdCompletedEventHandler(object sender, GetScheduleInfoByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleInfoByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleInfoByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Schedule Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Schedule)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateScheduleInformationCompletedEventHandler(object sender, UpdateScheduleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateScheduleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateScheduleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool UpdateScheduleInformationResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool UpdateScheduleInformationResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591